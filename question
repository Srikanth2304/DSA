/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dum = head;
        if(head->next == nullptr)return nullptr;
        if(head->next != NULL and head->next->next == NULL and count == 1){
            head->next = nullptr;
            return head;
        }else{
            head = dum->next;
            dum->next = NULL;
            return head;
        }
        ListNode* temp = head;
        int count = 0;
        while(temp != nullptr){
            count++;
            temp = temp->next;
        }
        count = count - n;
        dum = head;
        if(count == 0){
            head = dum->next;
            dum->next = NULL;
            return head;
        }
        cout<< count;
        ListNode * temp2 = head;
        for(int i = 0 ;i < count ; i++){
            temp2 = temp2->next;
        }
        ListNode * temp1 = head;
        while(temp1->next != nullptr and temp1->next != temp2){
            temp1 = temp1->next;
        }
        if(temp1->next != NULL)temp1->next = temp1->next->next;
        return head;
    }
};


Line 16: Char 64: error: reference to overloaded function could not be resolved; did you mean to call it?
   16 |         if(head->next != NULL and head->next->next == NULL and count == 1){
      |                                                                ^~~~~
/usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_algo.h:4059:5: note: possible target for call
 4050 |     count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
      |     ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/pstl/glue_algorithm_defs.h:101:1: note: possible target for call
   92 | count(_ExecutionPolicy&& __exec, _ForwardIterator __first, _ForwardIterator __last, const _Tp& __value);
      | ^
1 error generated.
